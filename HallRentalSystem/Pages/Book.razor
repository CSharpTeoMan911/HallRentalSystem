@using HallRentalSystem.Classes;
@using System.Text;
@using Controllers;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using HallRentalSystem.Components;
@using HallRentalSystem.Classes.StructuralAndBehavioralElements;
@using HallRentalSystem.Classes.API_Parameters;
@using HallRentalSystem.Classes.StructuralAndBehavioralElements.Formaters;
@inject IJSRuntime JS
@inject NavigationManager Navigation_Manager;
@inject ProtectedLocalStorage LocalStorage;
@inherits Shared_Data;
@page "/book"


<PageTitle>Home</PageTitle>


<div class="index_page_skeleton">
    <h1 class="handwritten_page_title">Book a Hall</h1>
    <select @onchange=@((changed_value)=>LocationOnChange(changed_value?.Value?.ToString())) class="form-select" aria-label="Default select example" style="width: 200px; height: 40px; font-size: 16px; padding: 5px 10px; border: 1px solid #ccc; border-radius: 4px;">
        <option selected>All</option>
        <option value="London">London</option>
        <option value="Crawley">Crawley</option>
        <option value="Liverpool">Liverpool</option>
        <option value="Manchester">Manchester</option>
    </select>
    <select @onchange=@((changed_value)=>HallOnChange(changed_value?.Value?.ToString())) class="form-select" aria-label="Default select example" style="width: 200px; height: 40px; font-size: 16px; padding: 5px 10px; border: 1px solid #ccc; border-radius: 4px;">
        <option selected>Select Hall</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
    </select>
    <h1 class="handwritten_page_title">picture of the hall</h1>
    <h1 class="handwritten_page_title">info of the hall</h1>
    <h1 class="handwritten_page_title">calendar for choosing the date</h1>
    <button>book</button>
</div>



@code{
    protected override async void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (await Shared_Functions.AuthenticationStateManagerFunctions.Get_If_User_Is_Logged_In(LocalStorage) == true)
            StateHasChanged();
    }

    private async void LocationOnChange(string? value)
    {
        Halls_Pagination p = new Halls_Pagination();
        p.location_filter = "London";

        TestObject obj = new TestObject();
        obj.s = "Hall test string";
        obj.t = new List<InnerTestObject>()
        {
            new InnerTestObject()
            {
                sTring = "Testing query formater",
                t = new List<string>()
                {
                    "query formater test 1",
                    "query formater test 2",
                    "query formater test 3"
                }
            },
            new InnerTestObject()
            {
                sTring = "Testing query formater",
                t = new List<string>()
                {
                    "query formater test 4",
                    "query formater test 5",
                    "query formater test 6"
                }
            }
        };
        obj.trasnsistiveObject = new TrasnsistiveObject()
        {
            t = new List<InnerTestObject>()
            {
                new InnerTestObject()
                {
                    sTring = "Testing transistive query formater",
                    t = new List<string>()
                    {
                        "query transistive formater test 1",
                        "query transistive formater test 2",
                        "query transistive formater test 3"
                    }
                },
                new InnerTestObject()
                {
                    sTring = "Testing transistive query formater",
                    t = new List<string>()
                    {
                        "query transistive formater test 4",
                        "query transistive formater test 5",
                        "query transistive formater test 6"
                    }
                }
            }
        };



        System.Net.Http.HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(Navigation_Manager.BaseUri);
       
        HttpResponseMessage m = await client.GetAsync("auth/get-account?" + (await Query_Formater.ObjectQueryFormatter<TestObject>(obj)));
        Console.WriteLine(await m.Content.ReadAsStringAsync());
    }

    private void HallOnChange(string? value)
    {
        Console.WriteLine(value);
    }
}