@using HallRentalSystem.Classes.StructuralAndBehavioralElements;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inherits LayoutComponentBase
@inject NavigationManager Navigation_Manager;
@inject ProtectedLocalStorage LocalStorage;
@inject IJSRuntime JS

<PageTitle>HallRentalSystem</PageTitle>
<div id="background_image" class="main_background_image_style"></div>
<div id="main_page_structure_div" class="main_page_structure">
    <div>
        <NavMenu />
    </div>
    <main>
        <div class="page_content_structure">
            <div class="page_content">
                <div class="index_page_skeleton">
                    @Body
                </div>
            </div>
        </div>
    </main>
</div>
@code {
    private async Task<bool> InitiateAnimations()
    {
        try
        {
            // IMPORT THE "Animations.js" MODULE AND SAVE ITS REFERENCE IN AN "IJSObjectReference"
            IJSObjectReference animations_module = await JS.InvokeAsync<IJSObjectReference>("import", "./Scripts/Animations.js");

            // IF THE "IJSObjectReference" OBJECT IS NOT NULL
            if (animations_module != null)
            {
                // INVOKE THE NECESARY ANIMATIONS METHODS
                //
                // [ BEGIN ]

                IJSObjectReference module = await JS.InvokeAsync<IJSObjectReference>("import", "./Scripts/Actions.js");
                await module.InvokeAsync<string>("ChangeNavState");

                await animations_module.InvokeAsync<string>("SetBookingElementResize");

                await animations_module.InvokeAsync<string>("ClearBookingElementsContainerResize");

                await animations_module.InvokeAsync<string>("SetBackgroundImage");

                await animations_module.InvokeAsync<string>("GradientFluctuationAnimationCancellation");

                await animations_module.InvokeAsync<string>("Clear_Background_Image_Sizing");

                await animations_module.InvokeAsync<string>("ClearExpansionAnimation", "main_page_structure_div");

                await animations_module.InvokeAsync<string>("Clear_Set_Button_Focus_Effect", "button_cover_1");

                await animations_module.InvokeAsync<string>("Clear_Set_Button_Focus_Effect", "button_cover_2");

                await animations_module.InvokeAsync<string>("Clear_Resize_Home_Page_Elements");

                await animations_module.InvokeAsync<string>("Clear_Resize_Contacts_Page_Elemets");

                await animations_module.InvokeAsync<string>("ClearAuthGradientFluctuation");

                await animations_module.InvokeAsync<string>("SetBookingElementResize");

                await animations_module.InvokeAsync<string>("ExpansionAnimation", "index_page_jumbotron", "90", "10", "%");

                await animations_module.InvokeAsync<string>("GradientFluctuationAnimation", "main_page_structure_div", "40", "65",
                "50");

                await animations_module.InvokeAsync<string>("SetBookingElementsContainerResize");

                await animations_module.InvokeAsync<string>("Set_Background_Image_Sizing");

                await animations_module.InvokeAsync<string>("Set_Resize_Home_Page_Elements");

                await animations_module.InvokeAsync<string>("Set_Resize_Contacts_Page_Elemets");

                await animations_module.InvokeAsync<string>("SetAuthGradientFluctuation");

                // [ END ]
            }
        }
        catch { }

        return true;
    }

    protected override async Task<bool> OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (Program.Is_API_Testing_Mode == true)
            Navigation_Manager.NavigateTo("/swagger/index.html", forceLoad: true);

        await InitiateAnimations();
        return true;
    }
}
